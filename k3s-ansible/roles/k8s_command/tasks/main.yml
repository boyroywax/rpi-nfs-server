- name: connect to k8s
  k8s:
    kubeconfig: /etc/rancher/k3s/k3s.yaml
      
# - name: Fetch a list of namespaces
#   set_fact:
#     projects: "{{ lookup('k8s', api_version='v1', kind='Namespace') }}"

- name: get pods  
  k8s_facts:
    kind: Pod
    field_selectors:
      - status.phase = running
    # - name: Create Tiller namespace.
    #   k8s:
    #     state: present
    #     definition:
    #       apiVersion: v1
    #       kind: ServiceAccount
    #       metadata:
    #         name: tiller
    #         namespace: kube-system

    # - name: Apply Tiller RBAC definition.
    #   k8s:
    #     state: present
    #     definition: "{{ lookup('file', 'files/tiller-rbac.yml') | from_yaml }}"

    # - name: Retrieve helm binary archive.
    #   unarchive:
    #     src: https://storage.googleapis.com/kubernetes-helm/helm-v2.10.0-linux-amd64.tar.gz
    #     dest: /tmp
    #     creates: /usr/local/bin/helm
    #     remote_src: yes

    # - name: Move helm binary into place.
    #   command: >
    #     cp /tmp/linux-amd64/helm /usr/local/bin/helm
    #     creates=/usr/local/bin/helm
    # - name: Set up Helm and Tiller.
    #   command: helm init --service-account tiller
    #   register: helm_init_result
    #   changed_when: "'already installed' not in helm_init_result.stdout"

    # - name: Get Tiller's ClusterIP.
    #   k8s:
    #     api_version: v1
    #     kind: Service
    #     name: tiller-deploy
    #     namespace: kube-system
    #   register: tiller_service

    # - name: Set the Helm host and port.
    #   set_fact:
    #     helm_host: "{{ tiller_service.result.spec.clusterIP }}"
    #     helm_port: "{{ tiller_service.result.spec.ports[0].port }}"

    # - name: Wait for Tiller to become responsive.
    #   wait_for:
    #     host: '{{ helm_host }}'
    #     port: '{{ helm_port }}'
    #     state: started

    # - name: List installed Helm charts.
    #   command: helm list
    #   environment:
    #     HELM_HOST: '{{ helm_host }}:{{ helm_port }}'
    #   register: helm_list_results
    #   changed_when: False

    # - name: Install phpMyAdmin with Helm.
    #   command: >
    #     helm install --name phpmyadmin stable/phpmyadmin
    #     --set service.type=NodePort
    #   environment:
    #     HELM_HOST: '{{ helm_host }}:{{ helm_port }}'
    #   when: "'phpmyadmin' not in helm_list_results.stdout"

    # - name: Get the details of the phpmyadmin Service.
    #   k8s:
    #     api_version: v1
    #     kind: Service
    #     name: phpmyadmin
    #     namespace: default
    #   register: phpmyadmin_service

    # - name: Print the NodePort of the phpmyadmin Service.
    #   debug:
    #     var: phpmyadmin_service.result.spec.ports[0].nodePort