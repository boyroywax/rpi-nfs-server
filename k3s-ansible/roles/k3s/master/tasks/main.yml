---

- name: Copy K3s service file
  register: k3s_service
  template:
    src: "k3s.service.j2"
    dest: "{{ systemd_dir }}/k3s.service"
    owner: root
    group: root
    mode: 0755

- name: Enable and check K3s service
  systemd:
    name: k3s
    daemon_reload: yes
    state: restarted
    enabled: yes

- name: Register file access mode
  stat:
    path: /var/lib/rancher/k3s/server
  register: p

- name: Change file access node-token
  file:
    path: /var/lib/rancher/k3s/server
    mode: "g+rx,o+rx"

- name: Read Node Token from Master
  slurp:
    src: /var/lib/rancher/k3s/server/node-token
  register: node_token

- name: Store Master Token
  set_fact: 
   token: "{{ node_token.content | b64decode | regex_replace('\n', '') }}"

- name: Restore file access 
  file:
    path: /var/lib/rancher/k3s/server
    mode: "{{ p.stat.mode }}"

- name: Retrieve kubectl config file from the master server.
  fetch: 
    src: /etc/rancher/k3s/k3s.yaml
    dest: files/k8s.yml
    flat: yes

# - name: Replace server command in k3s agent service with agent command
#   replace:
#     path: ./files/k8s.yml
#     regexp: '^localhost$'
#     replace: master_ip

# - name: connect to k8s
#   plugin: k8s
#   connections:
#     - kubeconfig: files/k8s.yml
#       context: 'awx/{{ master_ip }}/developer'
    

# - name: Fetch a list of namespaces
#   set_fact:
#     projects: "{{ lookup('k8s', api_version='v1', kind='Namespace') }}"

# - name: get pods  
#   k8s_facts:
#     kind: Pod
#     field_selectors:
#       - status.phase = running



#- debug: msg="Node TOKEN {{ token }}"
